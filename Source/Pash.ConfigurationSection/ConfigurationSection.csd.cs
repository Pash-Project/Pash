//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pash.Configuration
{
    
    
    /// <summary>
    /// The AliasElement Configuration Element.
    /// </summary>
    public partial class AliasElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region name Property
        /// <summary>
        /// The XML name of the <see cref="name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string namePropertyName = "name";
        
        /// <summary>
        /// Gets the name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The name.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Pash.Configuration.AliasElement.namePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string name
        {
            get
            {
                return ((string)(base[global::Pash.Configuration.AliasElement.namePropertyName]));
            }
        }
        #endregion
        
        #region definition Property
        /// <summary>
        /// The XML name of the <see cref="definition"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string definitionPropertyName = "definition";
        
        /// <summary>
        /// Gets or sets the definition.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The definition.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Pash.Configuration.AliasElement.definitionPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string definition
        {
            get
            {
                return ((string)(base[global::Pash.Configuration.AliasElement.definitionPropertyName]));
            }
            set
            {
                base[global::Pash.Configuration.AliasElement.definitionPropertyName] = value;
            }
        }
        #endregion
        
        #region scope Property
        /// <summary>
        /// The XML name of the <see cref="scope"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string scopePropertyName = "scope";
        
        /// <summary>
        /// Gets or sets the scope.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The scope.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Pash.Configuration.AliasElement.scopePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="global")]
        public virtual string scope
        {
            get
            {
                return ((string)(base[global::Pash.Configuration.AliasElement.scopePropertyName]));
            }
            set
            {
                base[global::Pash.Configuration.AliasElement.scopePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Pash.Configuration
{
    
    
    /// <summary>
    /// The VariableElement Configuration Element.
    /// </summary>
    public partial class VariableElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region name Property
        /// <summary>
        /// The XML name of the <see cref="name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string namePropertyName = "name";
        
        /// <summary>
        /// Gets the name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The name.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Pash.Configuration.VariableElement.namePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string name
        {
            get
            {
                return ((string)(base[global::Pash.Configuration.VariableElement.namePropertyName]));
            }
        }
        #endregion
        
        #region type Property
        /// <summary>
        /// The XML name of the <see cref="type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string typePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Pash.Configuration.VariableElement.typePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="System.String")]
        public virtual string type
        {
            get
            {
                return ((string)(base[global::Pash.Configuration.VariableElement.typePropertyName]));
            }
            set
            {
                base[global::Pash.Configuration.VariableElement.typePropertyName] = value;
            }
        }
        #endregion
        
        #region value Property
        /// <summary>
        /// The XML name of the <see cref="value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string valuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Pash.Configuration.VariableElement.valuePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=null)]
        public virtual string value
        {
            get
            {
                return ((string)(base[global::Pash.Configuration.VariableElement.valuePropertyName]));
            }
            set
            {
                base[global::Pash.Configuration.VariableElement.valuePropertyName] = value;
            }
        }
        #endregion
        
        #region scope Property
        /// <summary>
        /// The XML name of the <see cref="scope"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string scopePropertyName = "scope";
        
        /// <summary>
        /// Gets the scope.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The scope.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Pash.Configuration.VariableElement.scopePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="global")]
        public virtual string scope
        {
            get
            {
                return ((string)(base[global::Pash.Configuration.VariableElement.scopePropertyName]));
            }
        }
        #endregion
    }
}
namespace Pash.Configuration
{
    
    
    /// <summary>
    /// The ExecutionContextConfigurationSection Configuration Section.
    /// </summary>
    public partial class ExecutionContextConfigurationSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the ExecutionContextConfigurationSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ExecutionContextConfigurationSectionSectionName = "defaultExecutionContext";
        
        /// <summary>
        /// Gets the ExecutionContextConfigurationSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public static global::Pash.Configuration.ExecutionContextConfigurationSection Instance
        {
            get
            {
                return ((global::Pash.Configuration.ExecutionContextConfigurationSection)(global::System.Configuration.ConfigurationManager.GetSection(global::Pash.Configuration.ExecutionContextConfigurationSection.ExecutionContextConfigurationSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Pash.Configuration.ExecutionContextConfigurationSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Pash.Configuration.ExecutionContextConfigurationSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region PSSnapins Property
        /// <summary>
        /// The XML name of the <see cref="PSSnapins"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string PSSnapinsPropertyName = "psSnapins";
        
        /// <summary>
        /// Gets or sets the PSSnapins.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The PSSnapins.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Pash.Configuration.ExecutionContextConfigurationSection.PSSnapinsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Pash.Configuration.PSSnapinCollection PSSnapins
        {
            get
            {
                return ((global::Pash.Configuration.PSSnapinCollection)(base[global::Pash.Configuration.ExecutionContextConfigurationSection.PSSnapinsPropertyName]));
            }
            set
            {
                base[global::Pash.Configuration.ExecutionContextConfigurationSection.PSSnapinsPropertyName] = value;
            }
        }
        #endregion
        
        #region Functions Property
        /// <summary>
        /// The XML name of the <see cref="Functions"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string FunctionsPropertyName = "functions";
        
        /// <summary>
        /// Gets or sets the Functions.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Functions.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Pash.Configuration.ExecutionContextConfigurationSection.FunctionsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Pash.Configuration.FunctionsCollection Functions
        {
            get
            {
                return ((global::Pash.Configuration.FunctionsCollection)(base[global::Pash.Configuration.ExecutionContextConfigurationSection.FunctionsPropertyName]));
            }
            set
            {
                base[global::Pash.Configuration.ExecutionContextConfigurationSection.FunctionsPropertyName] = value;
            }
        }
        #endregion
        
        #region Aliases Property
        /// <summary>
        /// The XML name of the <see cref="Aliases"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string AliasesPropertyName = "aliases";
        
        /// <summary>
        /// Gets or sets the Aliases.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Aliases.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Pash.Configuration.ExecutionContextConfigurationSection.AliasesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Pash.Configuration.AliasesCollection Aliases
        {
            get
            {
                return ((global::Pash.Configuration.AliasesCollection)(base[global::Pash.Configuration.ExecutionContextConfigurationSection.AliasesPropertyName]));
            }
            set
            {
                base[global::Pash.Configuration.ExecutionContextConfigurationSection.AliasesPropertyName] = value;
            }
        }
        #endregion
        
        #region Variables Property
        /// <summary>
        /// The XML name of the <see cref="Variables"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string VariablesPropertyName = "variables";
        
        /// <summary>
        /// Gets or sets the Variables.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Variables.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Pash.Configuration.ExecutionContextConfigurationSection.VariablesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Pash.Configuration.VariablesCollection Variables
        {
            get
            {
                return ((global::Pash.Configuration.VariablesCollection)(base[global::Pash.Configuration.ExecutionContextConfigurationSection.VariablesPropertyName]));
            }
            set
            {
                base[global::Pash.Configuration.ExecutionContextConfigurationSection.VariablesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Pash.Configuration
{
    
    
    /// <summary>
    /// The FunctionElement Configuration Element.
    /// </summary>
    public partial class FunctionElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region name Property
        /// <summary>
        /// The XML name of the <see cref="name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string namePropertyName = "name";
        
        /// <summary>
        /// Gets the name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The name.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Pash.Configuration.FunctionElement.namePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string name
        {
            get
            {
                return ((string)(base[global::Pash.Configuration.FunctionElement.namePropertyName]));
            }
        }
        #endregion
        
        #region type Property
        /// <summary>
        /// The XML name of the <see cref="type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string typePropertyName = "type";
        
        /// <summary>
        /// Gets the type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The type.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Pash.Configuration.FunctionElement.typePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="inline")]
        public virtual string type
        {
            get
            {
                return ((string)(base[global::Pash.Configuration.FunctionElement.typePropertyName]));
            }
        }
        #endregion
        
        #region value Property
        /// <summary>
        /// The XML name of the <see cref="value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string valuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Pash.Configuration.FunctionElement.valuePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string value
        {
            get
            {
                return ((string)(base[global::Pash.Configuration.FunctionElement.valuePropertyName]));
            }
            set
            {
                base[global::Pash.Configuration.FunctionElement.valuePropertyName] = value;
            }
        }
        #endregion
        
        #region scope Property
        /// <summary>
        /// The XML name of the <see cref="scope"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string scopePropertyName = "scope";
        
        /// <summary>
        /// Gets the scope.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The scope.")]
        [global::System.ComponentModel.ReadOnlyAttribute(true)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Pash.Configuration.FunctionElement.scopePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="global")]
        public virtual string scope
        {
            get
            {
                return ((string)(base[global::Pash.Configuration.FunctionElement.scopePropertyName]));
            }
        }
        #endregion
    }
}
namespace Pash.Configuration
{
    
    
    /// <summary>
    /// A collection of FunctionElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Pash.Configuration.FunctionElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMap, AddItemName=global::Pash.Configuration.FunctionsCollection.FunctionElementPropertyName)]
    public partial class FunctionsCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Pash.Configuration.FunctionElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string FunctionElementPropertyName = "function";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::Pash.Configuration.FunctionsCollection.FunctionElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Pash.Configuration.FunctionsCollection.FunctionElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Pash.Configuration.FunctionElement)(element)).name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Pash.Configuration.FunctionElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Pash.Configuration.FunctionElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Pash.Configuration.FunctionElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Pash.Configuration.FunctionElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Pash.Configuration.FunctionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Pash.Configuration.FunctionElement this[int index]
        {
            get
            {
                return ((global::Pash.Configuration.FunctionElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Pash.Configuration.FunctionElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Pash.Configuration.FunctionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Pash.Configuration.FunctionElement this[object name]
        {
            get
            {
                return ((global::Pash.Configuration.FunctionElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Pash.Configuration.FunctionElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="function">The <see cref="global::Pash.Configuration.FunctionElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::Pash.Configuration.FunctionElement function)
        {
            base.BaseAdd(function);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Pash.Configuration.FunctionElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="function">The <see cref="global::Pash.Configuration.FunctionElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::Pash.Configuration.FunctionElement function)
        {
            base.BaseRemove(this.GetElementKey(function));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Pash.Configuration
{
    
    
    /// <summary>
    /// A collection of AliasElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Pash.Configuration.AliasElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMap, AddItemName=global::Pash.Configuration.AliasesCollection.AliasElementPropertyName)]
    public partial class AliasesCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Pash.Configuration.AliasElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string AliasElementPropertyName = "alias";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::Pash.Configuration.AliasesCollection.AliasElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Pash.Configuration.AliasesCollection.AliasElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Pash.Configuration.AliasElement)(element)).name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Pash.Configuration.AliasElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Pash.Configuration.AliasElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Pash.Configuration.AliasElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Pash.Configuration.AliasElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Pash.Configuration.AliasElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Pash.Configuration.AliasElement this[int index]
        {
            get
            {
                return ((global::Pash.Configuration.AliasElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Pash.Configuration.AliasElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Pash.Configuration.AliasElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Pash.Configuration.AliasElement this[object name]
        {
            get
            {
                return ((global::Pash.Configuration.AliasElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Pash.Configuration.AliasElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="alias">The <see cref="global::Pash.Configuration.AliasElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::Pash.Configuration.AliasElement alias)
        {
            base.BaseAdd(alias);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Pash.Configuration.AliasElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="alias">The <see cref="global::Pash.Configuration.AliasElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::Pash.Configuration.AliasElement alias)
        {
            base.BaseRemove(this.GetElementKey(alias));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Pash.Configuration
{
    
    
    /// <summary>
    /// A collection of VariableElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Pash.Configuration.VariableElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMap, AddItemName=global::Pash.Configuration.VariablesCollection.VariableElementPropertyName)]
    public partial class VariablesCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Pash.Configuration.VariableElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string VariableElementPropertyName = "variable";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::Pash.Configuration.VariablesCollection.VariableElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Pash.Configuration.VariablesCollection.VariableElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Pash.Configuration.VariableElement)(element)).name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Pash.Configuration.VariableElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Pash.Configuration.VariableElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Pash.Configuration.VariableElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Pash.Configuration.VariableElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Pash.Configuration.VariableElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Pash.Configuration.VariableElement this[int index]
        {
            get
            {
                return ((global::Pash.Configuration.VariableElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Pash.Configuration.VariableElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Pash.Configuration.VariableElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Pash.Configuration.VariableElement this[object name]
        {
            get
            {
                return ((global::Pash.Configuration.VariableElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Pash.Configuration.VariableElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="variable">The <see cref="global::Pash.Configuration.VariableElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::Pash.Configuration.VariableElement variable)
        {
            base.BaseAdd(variable);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Pash.Configuration.VariableElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="variable">The <see cref="global::Pash.Configuration.VariableElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::Pash.Configuration.VariableElement variable)
        {
            base.BaseRemove(this.GetElementKey(variable));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Pash.Configuration
{
    
    
    /// <summary>
    /// A collection of PSSnapinElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Pash.Configuration.PSSnapinElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Pash.Configuration.PSSnapinCollection.PSSnapinElementPropertyName)]
    public partial class PSSnapinCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Pash.Configuration.PSSnapinElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string PSSnapinElementPropertyName = "psSnapin";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::Pash.Configuration.PSSnapinCollection.PSSnapinElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Pash.Configuration.PSSnapinCollection.PSSnapinElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Pash.Configuration.PSSnapinElement)(element)).type;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Pash.Configuration.PSSnapinElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Pash.Configuration.PSSnapinElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Pash.Configuration.PSSnapinElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Pash.Configuration.PSSnapinElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Pash.Configuration.PSSnapinElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Pash.Configuration.PSSnapinElement this[int index]
        {
            get
            {
                return ((global::Pash.Configuration.PSSnapinElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Pash.Configuration.PSSnapinElement"/> with the specified key.
        /// </summary>
        /// <param name="type">The key of the <see cref="global::Pash.Configuration.PSSnapinElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Pash.Configuration.PSSnapinElement this[object type]
        {
            get
            {
                return ((global::Pash.Configuration.PSSnapinElement)(base.BaseGet(type)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Pash.Configuration.PSSnapinElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="psSnapin">The <see cref="global::Pash.Configuration.PSSnapinElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::Pash.Configuration.PSSnapinElement psSnapin)
        {
            base.BaseAdd(psSnapin);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Pash.Configuration.PSSnapinElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="psSnapin">The <see cref="global::Pash.Configuration.PSSnapinElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::Pash.Configuration.PSSnapinElement psSnapin)
        {
            base.BaseRemove(this.GetElementKey(psSnapin));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Pash.Configuration
{
    
    
    /// <summary>
    /// The PSSnapinElement Configuration Element.
    /// </summary>
    public partial class PSSnapinElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region type Property
        /// <summary>
        /// The XML name of the <see cref="type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string typePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Pash.Configuration.PSSnapinElement.typePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string type
        {
            get
            {
                return ((string)(base[global::Pash.Configuration.PSSnapinElement.typePropertyName]));
            }
            set
            {
                base[global::Pash.Configuration.PSSnapinElement.typePropertyName] = value;
            }
        }
        #endregion
    }
}
